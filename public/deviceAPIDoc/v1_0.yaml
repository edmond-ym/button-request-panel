openapi: 3.0.0
servers:
  - url: https://button-request.herokuapp.com/deviceAPI/v1
  #- url: http://localhost/deviceAPI/v1
    description: Button Device API Server
info:
  title: Button Device API
  version: 1.0.0
  license: 
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
    #identifier: Apache 2.0

  description: >
    # Introduction
    
    When Button on the corresponding device is pressed, the request is sent using this
    api and the message is generated 
    
   

tags:
  - name: deviceAPI
    description: Button Device API
    x-displayName: Button Device API



paths:
  '/{deviceId}':
    post:
      security:
        - DeviceAPIAuth: []    
      tags:
        - deviceAPI
      description: Send a Button Request
      summary: Send a message by pressing the button
      operationId: deviceAPI
      parameters:
          - name: deviceId
            in: path
            required: true
            deprecated: false
            schema:
              type: string
            
          - name: button_id
            in: query
            required: true
            deprecated: false
            schema:
              type: string
                  

      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result: 
                    description: Result of the Action
                    type: string
                    example: success
                    enum: 
                      - not-subscribed
                      - fail
                      - success
                      - no-repeated-message
                      - button-id-not-exist
                  data:
                    description: Data
                    type: array
                    items:
                      properties:
                        msg_id:
                          type: string
                        message:
                          type: string
                        datetime:
                          type: string

                      
        '403':
          description: Unauthenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  result: 
                    description: Result of the Action
                    type: string
                    example: device-id-not-exist
                    enum: 
                      - device-id-not-exist
                      - decryption-failed
                      - wrong-bearer-token
                  data:
                    description: Data
                    example: []
                    enum: 
                      - []

                      
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  result: 
                    description: Result of the Action
                    type: string
                    example: device-suspended
                    enum: 
                      - device-suspended
                  data:
                    description: Data
                    example: []
                    enum: 
                      - []
        '400':
          description: Not a Valid Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  result: 
                    description: Result of the Action
                    type: string
                    example: not-valid-request
                    enum: 
                      - not-valid-request
                  data:
                    description: Data
                    example: []
                    enum: 
                      - []
  

components:
  securitySchemes:
    DeviceAPIAuth:
      description: This is for the Button Device Request
      type: http
      scheme: bearer
      bearerFormat: JWT 
    
                
 
      



      




            
    
